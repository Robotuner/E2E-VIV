@page
@model ElectionWebsite.Pages.Home.InternetVotingModel
@{
}

<div class="text-left">
    <h1>Internet Voting</h1>
    <p>The question today is whether internet voting is more secure than mail-in voting.</p>
    <h2>What internet voting eliminates</h2>
    <ul>
        <li>
            Paper ballots that are not linked to a registered voter.
        </li>
        <li>
            Questionable ink marks that require poll workers to discern voter intent.
        </li>
        <li>
            Ballot scanning machines.
        </li>
        <li>
            Ballot chain of custody from State thru mail to poll.
        </li>
        <li>
            Misplacement of ballots.
        </li>
        <li>
            Poll workers/ Poll watcher controversies.
        </li>
        <li>
            Visual signature verification.
        </li>
        <li>
            US Postal service delivery.
        </li>
        <li>Ballot logistics, keeping ballots that have been counted separate from those yet to be counted.</li>
    </ul>
    <h2>What internet voting offers</h2>
    <ul>
        <li>
            Ability to link ballot to registered voter.
        </li>
        <li>
            Ballot digital trail.
        </li>
        <li>
            Verification that completed ballots are legitimate.
        </li>
        <li>
            Confirmation that ballots have been counted.
        </li>
        <li>
            Auditing that is capable of fraud discovery.
        </li>
        <li>
            Auditing that allows fraudulent ballots to be removed from count totals.
        </li>
        <li>Signature verification</li>
    </ul>
    <p>
        Internet voting hinges on being able to convince the reader that internet voting is more
        secure than mail-in voting and offers the ability to detect fraud and remove illegitimate votes
        in a manner that is not possible with mail-in voting.  It is a proposal describing a system of
        procedures and processes designed to defeat Man in the Middle (MitM) attacks, implements roadblocks
        that ensures the integrity of ballots, and provide a clear auditing strategy.  It is a proposal
        that addresses the three critical phases in the lifecycle of a ballot.
    </p>
    <h2>Architecture</h2>
    <p>
        As with any process there must be a starting point.  The starting point for E2E-VIV is delivery of the ballot to the
        Registered Voter.  It is not voter registration.  That is left to each State to decide how to derive a list
        of registered voters who are allowed to vote in an election.  In an internet voting scenario, ballots are
        made available to registered voters in the form of a QR Code.  QR Codes can only be read by devices, offering
        a minor level of security, but more importantly it can convey instructions and codes that can be used to automate
        retrieval of data, alleviating the requirement of manually entering password or pin numbers.
    </p>
    <ul>
        Ballot QR codes will contain:
        <li>
            An encryted Ballot authorization code (can be registered users SSN or Pin).
        </li>
        <li>
            Election Code used to identify which ballot to retrieve.
        </li>
        <li>
            Election Date
        </li>
        <li>
            Poll opening and closing date and times.
        </li>
        <li>Registered voters birth year.</li>
    </ul>
    <p>
        The voting app will use the election code to retrieve the correct ballot from the ballot server.  A multi-step
        retrieval process ensures that the ballot has not been tampered in transit.
    </p>
    <ul>
        <li>
            The voting app will notify the ballot server that a ballot for the election will be requested.
        </li>
        <li>
            The ballot server will reply with an expected Nonce for the ballot that will be sent.
        </li>
        <li>
            The voting app will then request the ballot.
        </li>
        <li>
            The ballot server will then send the ballot.
        </li>
        <li>
            The voting app will verify that the ballot is valid and that the Nonce is the expected Nonce.
        </li>
        <li>The voting app will permit votes to be cast against the slate of candidates on the ballot.</li>
    </ul>
    <p>
        When the votes have been cast for the ballot contests, the voter will be asked to review and confirm the votes
        before submitting the ballot. Once the vote selection has been confirmed, the app will create a digital signature
        for the submittal.  The digital signature will include:
    </p>
    <ul>
        <li>
            The decrypted ballot authorization to be included with the signature.   Only the registered voter will be able to decrypt the ballot.
        </li>
        <li>
            A head shot
            <ul>
                <li>
                    The head shot will be restricted to an image taken by the cell phone that only contains a single face.
                </li>
                <li>
                    The intent is to prevent substitution of photographs for an actual head shot.
                </li>
                <li>
                    The goal would be for head shots to include facial landmarks.
                </li>
                <li>
                    In a perfect world, each vote is accompanied with a unique ballot id and head shot.
                </li>
            </ul>
        </li>
        <li>
            A device id.  Unique device id's for iOS and android devices are not available.  We can substitute one that is assigned to the device.
        </li>
        <li>
            Platform (iOS or android)
        </li>
        <li>
            Longitude and latitude
        </li>
        <li>
            Submittal date and time.
        </li>
        <li>
            The complete ballot.
        </li>
        <li>Count of candidates.</li>
    </ul>
    <p>
        The signature is submitted to the vote counting server (vcs) using a multi-step process to three different servers.  The
        three servers are the State Server, and two backup servers, one hosted by the Democrat party, the other hosted by the
        Republican party.
    </p>
    <ul>
        <li>
            The voting app will notify the vcs that a ballot will be sent with an expected Nonce.
        </li>
        <li>
            The vcs will acknowledge receipt of the Nonce.
        </li>
        <li>
            The voting app will send the signature to the vcs.
        </li>
        <li>
            The vcs will validate the completed ballot and verify that the Nonce is the expected Nonce.
        </li>
        <li>The vcs saves the signature and completed ballot.  It updates the candidate count totals.</li>
    </ul>
    <p>
        The votes recorded for each ballot will be saved to a vote database.  The individual votes will also be saved to a result
        database that simply increments a counter for each candidate.  This maintains a running total for each candidate vote count
        and is much more efficient that quering the vote database periodically.
    </p>
    <p>
        Once polls close, the audit process will begin.
    </p>
    <div class="container">
        <div class="row">
            <div class="col">
                <a href="./MailIn">< Prev</a>
            </div>
            <div class="col">
                <a href="./Audit">Next ></a>
            </div>
        </div>
    </div>
   
</div>